events {

}


http {

    include mime.types;

    server {
        listen 80;
        server_name 192.168.100.20;

        root /sites/demo;

        # # Preferencial Prefix match, works from /greeting, /greet/asdf
        location ^~ /Greet2 {
            return 200 'Hello from NGINX gree location with prefix match!';
        }

        # Exact match
        # location = /greet {
        #     return 200 'Hello from NGINX gree location with exact match!';
        # }

        # REGEX match - case sensitive
        # location ~ /greet[0-9] {
        #     return 200 'Hello from NGINX greet location with regex case sensitive!';
        # }

        # REGEX match - case insensitive
        location ~* /greet[0-9] {
            return 200 'Hello from NGINX greet location with regex case insensitive!';
        }
    }

}

# (none): If no modifiers are present, the location is interpreted as a prefix match. This means that the location given will be matched against the beginning of the request URI to determine a match.
#      =: If an equal sign is used, this block will be considered a match if the request URI exactly matches the location given.
#      ~: If a tilde modifier is present, this location will be interpreted as a case-sensitive regular expression match.
#     ~*: If a tilde and asterisk modifier is used, the location block will be interpreted as a case-insensitive regular expression match.
#     ^~: If a carat and tilde modifier is present, and if this block is selected as the best non-regular expression match, regular expression matching will not take place.
